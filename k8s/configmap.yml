# NeuroCluster Streamer API - Kubernetes ConfigMap
# ================================================
# Application configuration for NCS API

apiVersion: v1
kind: ConfigMap
metadata:
  name: ncs-api-config
  namespace: ncs-api
  labels:
    app.kubernetes.io/name: ncs-api
    app.kubernetes.io/component: config
    app.kubernetes.io/version: "1.0.0"
data:
  # Core Application Settings
  ENVIRONMENT: "production"
  DEBUG: "false"
  LOG_LEVEL: "INFO"
  HOST: "0.0.0.0"
  PORT: "8000"
  WORKERS: "8"
  
  # Database Configuration
  POSTGRES_HOST: "postgres-service"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: "ncs_prod"
  POSTGRES_USER: "ncs_prod"
  DB_POOL_SIZE: "50"
  DB_MAX_OVERFLOW: "100"
  DB_POOL_TIMEOUT: "30"
  DB_ECHO: "false"
  
  # Redis Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  REDIS_POOL_SIZE: "100"
  CACHE_TTL_SECONDS: "3600"
  SESSION_TTL_SECONDS: "86400"
  
  # Algorithm Configuration
  NCS_BASE_THRESHOLD: "0.71"
  NCS_LEARNING_RATE: "0.06"
  NCS_MAX_CLUSTERS: "30"
  NCS_MIN_CLUSTER_SIZE: "3"
  NCS_OUTLIER_THRESHOLD: "2.5"
  NCS_BATCH_SIZE: "1000"
  NCS_MEMORY_WARNING_THRESHOLD_MB: "1024"
  NCS_ENABLE_VECTORIZATION: "true"
  NCS_ENABLE_PROFILING: "false"
  
  # Security Configuration
  JWT_ALGORITHM: "HS256"
  ACCESS_TOKEN_EXPIRE_MINUTES: "30"
  API_KEY_HEADER: "X-API-Key"
  
  # Rate Limiting
  RATE_LIMIT_PER_MINUTE: "1000"
  BURST_LIMIT: "100"
  
  # Monitoring Configuration
  PROMETHEUS_ENABLED: "true"
  METRICS_PORT: "8001"
  ENABLE_DETAILED_METRICS: "true"
  METRICS_RETENTION_DAYS: "30"
  
  # Logging Configuration
  LOG_FORMAT: "json"
  LOG_RETENTION_DAYS: "30"
  
  # Health Check Configuration
  HEALTH_CHECK_INTERVAL: "30"
  HEALTH_CHECK_TIMEOUT: "10"
  
  # Performance Configuration
  UVICORN_WORKER_CLASS: "uvicorn.workers.UvicornWorker"
  UVICORN_BACKLOG: "2048"
  UVICORN_MAX_REQUESTS: "10000"
  UVICORN_MAX_REQUESTS_JITTER: "1000"
  
  # Production Security Overrides
  DOCS_URL: ""
  REDOC_URL: ""
  OPENAPI_URL: ""
  ENABLE_DEBUG_ENDPOINTS: "false"
  DETAILED_LOGGING: "false"

---
# PostgreSQL Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: ncs-api
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: config
data:
  postgresql.conf: |
    # Connection Settings
    max_connections = 500
    shared_buffers = 1GB
    effective_cache_size = 3GB
    maintenance_work_mem = 256MB
    
    # Checkpoint Settings
    checkpoint_completion_target = 0.9
    wal_buffers = 64MB
    default_statistics_target = 100
    random_page_cost = 1.1
    effective_io_concurrency = 200
    work_mem = 4MB
    
    # WAL Settings
    max_wal_size = 4GB
    min_wal_size = 1GB
    
    # Logging
    log_min_duration_statement = 1000
    log_checkpoints = on
    log_connections = on
    log_disconnections = on
    log_lock_waits = on
    
    # Performance
    huge_pages = try
    shared_preload_libraries = 'pg_stat_statements'

---
# Redis Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: ncs-api
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: config
data:
  redis.conf: |
    # Network
    bind 0.0.0.0
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300
    
    # General
    daemonize no
    supervised no
    pidfile /var/run/redis_6379.pid
    loglevel notice
    databases 16
    
    # Snapshotting
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir ./
    
    # Append Only Mode
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    
    # Memory Management
    maxmemory 768mb
    maxmemory-policy allkeys-lru
    maxmemory-samples 5
    
    # Client Management
    maxclients 10000